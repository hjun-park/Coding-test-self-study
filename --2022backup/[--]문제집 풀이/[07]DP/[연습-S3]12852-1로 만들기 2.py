import sys

input = sys.stdin.readline

N = int(input().rstrip())

d = [0] * 1000005
pre = [0] * 1000005

'''
  1463-1로 만들기와 다르게 거쳐온 과정도 함께 출력하라는 문제
   - 이 경우 2개의 테이블이 필요하다.
     1) 원래의 DP값 테이블 (D) 테이블
     2) 추가적인 테이블 (경로 복원용 pre) 테이블
        
            1   2   3   4   5   6   7   8  
      d =   0   1   2   2   3   2   3   3
    pre =   0   1   1   2   4   3   6   4
    
    --> d[3] = 2 (3에서 1로 만들기 위해 필요한 최적 연산은 2번)
    --> pre[3] = 1 (3에서 1로 가는게 최적이라는 의미)

'''

# 1) 테이블을 채워 넣어준다.
# 2와 3으로 나누어 떨어질 때는 -1을 뺀 것과 비교해서 2로 혹은 3으로 나눈게 더 최적이라면
# d[i]를 다시 정의해주고 pre[i]도 다시 정의한다.
for i in range(2, N + 1):
    d[i] = d[i - 1] + 1
    pre[i] = i - 1

    if i % 2 == 0 and d[i] > d[i // 2] + 1:
        d[i] = d[i // 2] + 1
        pre[i] = i // 2

    if i % 3 == 0 and d[i] > d[i // 3] + 1:
        d[i] = d[i // 3] + 1
        pre[i] = i // 3

print(d[N])
cur = N

# 2) 값을 얻은 경로가 필요한 상황이라면 내 값은 어디로부터 온 건가 확인하며 경로 복원
#  ==> 해당 경로는 전부 1로 만드는 방법에 포함되어 있음
while True:
    print(cur, end=' ')
    if cur == 1:
        break

    cur = pre[cur]
