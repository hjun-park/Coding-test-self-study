import sys

n = int(input())
dp_list = [0, 0, 1, 1]  # 계산된 결과를 저장하기 위한 DP 테이블 초기화

'''
    dp_table[x의 값] = 연산횟수
    
     - 점화식을 이용하여 해결해야 한다.
     - 10을 예로 들자면, 
     -  1) 10에서 1을 빼는 경우 9가 1이 되는 최소 횟수를 알고 있다면? 
         -> (9가 1이 되는 최소 횟수) + 1(10에서 1을 빼서 9로 갈 때)
         -> d[9] + 1
     -  2) 10은 2로 나누어질 수도 있기 때문에 2로 나누어서 시작하는 경우,
           10을 2로 나누면 5가 된다, 5가 1이 되는 최소 횟수를 아는 경우?
        -> (5가 1이 되는 최소 횟수) + 1 (10에서 2로 나눠 5로 만들 때)
        -> d[5] + 1
           
     점화식 d(n) = min(d[n//3], d[n//2], d[n-1]) + 1 
'''

dp = [0 for _ in range(n + 1)]

for i in range(2, n + 1):

    # 먼저 1을 뺏을 경우 나오는 경우의 수 저장
    # 여기서 +1은 1을 뺀 경우에 대한 연산횟수를 더한 것
    dp[i] = dp[i - 1] + 1

    # 2로 나누어질 경우 기존 1을 뺏을 경우의 수와 비교하여 최솟값 저장
    # 여기서 +1은 연산횟수를 생각하면 됨
    if i % 2 == 0 and dp[i] > dp[i // 2] + 1:
        dp[i] = dp[i // 2] + 1

    # 3으로 나누어질 경우 기존 1을 뺏을 경우의 수와 비교하여 최솟값 저장
    # 여기서 2 또는 3으로 나누어질 경우 모든 경우를 봐야하므로 elif가 아닌 if로 설정
    if i % 3 == 0 and dp[i] > dp[i // 3] + 1:
        dp[i] = dp[i // 3] + 1

print(dp[n])
