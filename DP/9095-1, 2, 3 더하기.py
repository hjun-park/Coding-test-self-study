import sys

'''
     체크리스트 아이디어: https://velog.io/@i-zro/%ED%8C%8C%EC%9D%B4%EC%8D%ACPython-%EC%BD%94%ED%85%8C-%EB%8C%80%EB%B9%84-DP-%EB%B0%B1%EC%A4%80-9095-1-2-3-%EB%8D%94%ED%95%98%EA%B8%B0
    
    2021-06-29
    [시작 체크 리스트]
      V     1시간 지났으나 발상 불가 또는 아예 다른 길
            코드 50% 정도 완성
            1시간 보다 더 걸려서 코드 완성
            코드는 다 돌아가는데 효율성에서 걸림
            코드 완성
            
    [완료 후 체크 리스트]
            아예 모르겠음
            중간 정도 이해함
      V     완벽히 이해함
      
    [첨언]
      - DP문제는 이전 값의 상관관계를 잘 살펴보고 점화식을 작성하기
       
'''

'''
    [접근] 각각의 수에 대해서 1, 2, 3으로 만드는 경우의 수
    1 -> (1) -> 1개
    2 -> (1+1), (2) -> 2개
    3 -> (1+1+1), (1+2), (2+1), (3) -> 4개
    4 -> (1+1+1+1), (1+1+2), (1+2+1), (1+3), (2+1+1), (2+2), (3+1) -> 7개
    5 -> (1+1+1+1+1), (1+1+1+2), (1+1+2+1), (1+1+3), (1+2+1+1), (2+1+1+1), (1+2+2), (2+1+2), (2+2+1), (1+3+1), (3+1+1), (2+3), (3+2) -> 13개
    
    4와 5를 봤을 때 점화식을 아래와 같이 만들 수 있다.
    f(n) = f(n-3) + f(n-2) + f(n-1)

'''
T = int(input())


def logic(x):
    if x == 1:
        return 1
    elif x == 2:
        return 2
    elif x == 3:
        return 4
    else:
        return logic(x - 1) + logic(x - 2) + logic(x - 3)


for _ in range(T):
    n = int(input())
    print(logic(n))
