import sys

'''
    2021-07-01
    [시작 체크 리스트]
    V       15분 지났으나 발상 불가 또는 아예 다른 길
            코드 50% 정도 완성
            30분 보다 더 걸려서 코드 완성
            코드는 다 돌아가는데 효율성에서 걸림
            코드 완성

    [완료 후 체크 리스트]
            아예 모르겠음
    V       중간 정도 이해함
            완벽히 이해함

    [첨언]
     - 답을 구하는 과정에서도 점화식을 찾을 수 있음
     - 자꾸 답의 연관관계에서 점화식을 찾으려 하다보니 결국 찾지 못함
     
'''

'''
    [접근] https://dirmathfl.tistory.com/260
     - 1, 2, 3 총 3개를 이용하여 값을 만드는 문제
     - 맨 앞의 숫자에 대하여 개수의 변화를 보면 점화식을 세울 수 있다.
     - 다시말해 n이 6인 경우 1, 2, 3을 사용해 5를 만드는 식에서는,
     - 맨 앞에 1을 붙일 수 있는 식이 6을 만들 수 있는 식이 된다.
     - 결국, 5를 만드는 식은 ( 1 + 3 + 1, 2 + 1 + 2, 2 + 3, 3 + 2) 인데,
     - 1로 시작하는 식 = 1개 / 2로 시작 = 2개 / 3으로 시작 = 1개 
     - 숫자는 중복될 수 없으니 6을 만들기 위해 1을 앞에 더할 수 있는 식의 개수는 3개
       ( 2로 시작 + 3으로 시작 = 3개 )
     - 이러한 방식으로 i-3, i-2, i-1을 모두 구해주면 된다.
     
     - 점화식
    dp[구하고자 하는 수의 합][마지막 뒷자리 수]
        1) 1로 시작하는 식의 수
            dp[i][1] = dp[i-1][2] + dp[i-1][3]
        2) 2로 시작하는 식의 수
            dp[i][2] = dp[i-2][1] + dp[i-2][3]
        3) 3으로 시작하는 식의 수
            dp[i][3] = dp[i-3][1] + dp[i-3][2]
'''

d = [[0] * 4 for _ in range(100001)]

# d[n] 만드는데 = [0 개수, 1 개수, 2 개수, 3 개수]
d[0] = [0, 0, 0, 0]
d[1] = [0, 1, 0, 0]
d[2] = [0, 0, 1, 0]
d[3] = [0, 1, 1, 1]

# 4부터 연관관계 있음
for i in range(4, 100001):
    for j in range(1, 4):
        # j로 시작하는 식의 수
        d[i][1] = (d[i - 1][2] + d[i - 1][3]) % 1000000009
        d[i][2] = (d[i - 2][1] + d[i - 2][3]) % 1000000009
        d[i][3] = (d[i - 3][1] + d[i - 3][2]) % 1000000009

t = int(input())

for _ in range(t):
    n = int(input())
    print(sum(d[n]) % 1000000009)



