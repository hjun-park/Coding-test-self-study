import sys

input = sys.stdin.readline

N = int(input().rstrip())

MOD = 1_000_000_000

d = [[0] * 10 for _ in range(N + 2)]

'''
 1) 함수의 정의
 d[i][j] = i자리에서 나올 수 있는 계단수이면서 끝자리가 j인 계단수
 ==> 즉, i자리수에서 끝자리가 j인 계단수
 
 2) 점화식 (0과 1일 경우 예외 처리)
 f(N, d) = f(N-1, d-1) + f(N-1, d+1)
 
     ex) 
     1) 45656이 있다면 다음으로 5, 7이 올 수 있다. 
     2) 456543210이 있다면 다음으로 1만 올 수 있다. 
     3) 789가 있다면 다음으로 8만 올 수 있다.
     즉, 1~8부터는 +1, -1이 가능하고 0은 +1, 9는 -1이 된 수만 올 수 있다.
 
 3) 초기화
 N=1인 경우 모든 계단수가 1이다. 
 
'''

# N = 1 자리수의 모든 수는 1이다.
for i in range(1, 10):
    d[1][i] = 1

# N자리까지
for i in range(2, N + 1):
    for j in range(0, 10):  # 모든 수에 대해서 처리
        if j != 0:
            d[i][j] += d[i - 1][j - 1]  # 이전 자릿수의 끝자리 -1
        if j != 9:
            d[i][j] += d[i - 1][j + 1]

        d[i][j] %= MOD

# N일 때 자릿수 전부 더하기
print(sum(d[N]) % MOD)
