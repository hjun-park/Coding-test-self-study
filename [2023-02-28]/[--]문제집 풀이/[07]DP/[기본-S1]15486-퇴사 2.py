import sys

input = sys.stdin.readline

N = int(input().rstrip())
t = [0]
p = [0]
for i in range(N):
    a, b = map(int, input().split())
    t.append(a)
    p.append(b)

d = [0] * (N + 2)
'''
    1) 함수 정의
      D[i] = i 날짜에 상담할 시 날짜 초과도 안 되면서 최대로 얻을 수 있는 수익
    
    2) 점화식
      # i번째 일에 상담했을 때와 하지 않았을 때의 얻을 수 있는 수익 중 최대 수익을 취함
      # 거꾸로 순회하면서 시간이 넘지 않는지 체크한다.
      # => 시간을 안 넘으면 해당 일에 상담하는 것과 안 하는걸 비교하는 것이고
      # => 시간을 넘게 된다면 그냥 i를 바로 넘어간다.
      D[1] = 10
      D[2] = 20
      D[3] = 10
      D[4] = 10 + 20 / 10 + 20 (1일차, 3일차 시작)
      
    
    3) 초기값

'''

for i in range(N, 0, -1):  # 끝에서부터 순회함
    if i + t[i] <= (N + 1):  # 퇴사 당일(N+1)까지 끝마칠 수 있는 경우
        d[i] = max(d[i + t[i]] + p[i], d[i + 1])  # 상담하는 경우, 상담 안 하는 경우
    else:  # 끝내지 못해서 상담을 하지 않는 경우 이전 계산한 값을 대입함
        d[i] = d[i + 1]

print(max(d))
